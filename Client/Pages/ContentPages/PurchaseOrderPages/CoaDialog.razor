<SfDialog Width="800px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogEvents OnOpen="OpenDialog"></DialogEvents>
    <DialogTemplates>
        <Header> @Title Coa </Header>
        <Content>
            <EditForm Model="Coa" Enhance OnSubmit="Save">
                <div class="card border-success">
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">PO Copy Receive Date </label>
                            <InputDate @bind-Value="Coa.OrderCopy" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Received By</label>
                            <InputText @bind-Value="Coa.ReceivedBy" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Inspection Request Date</label>
                            <InputDate @bind-Value="Coa.InspectionRequest" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Received By</label>
                            <InputText @bind-Value="Coa.InspectionReceivedBy" class="form-control" />
                        </div>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="SAVE" Type="ButtonType.Submit" IsPrimary="true" OnClick="Save" />
    </DialogButtons>
</SfDialog>
@code {
    [Parameter]
    public Coa Coa { get; set; } = new Coa
        {
            ReceivedBy = string.Empty,
            InspectionReceivedBy = string.Empty
        };
    [Parameter] public EventCallback<Coa> HandleSaveOperationEvent { get; set; }
    private bool IsVisible { get; set; } = false;
    public string Title { get; set; } = "Add";
    public void OpenDialog()
    {
        IsVisible = true;
        Coa.OrderCopy = DateTime.Now;
        Coa.InspectionRequest = DateTime.Now;
        StateHasChanged();
    }

    async Task Save()
    {
        // Validate required fields
        if (string.IsNullOrEmpty(Coa.ReceivedBy))
        {
            await dialogService.AlertAsync("Received By is required.", "Alert!");
            return;
        }

        if (string.IsNullOrEmpty(Coa.InspectionReceivedBy))
        {
            await dialogService.AlertAsync("Inspection Received By is required.", "Alert!");
            return;
        }

        try
        {
            // Invoke the save operation event (calls the parent handler)
            await HandleSaveOperationEvent.InvokeAsync(Coa);

            // Close the dialog after a successful save
            await dialogService.AlertAsync("COA details added successfully.", "Success!");
        }
        catch (Exception ex)
        {
            // Handle unexpected errors
            await dialogService.AlertAsync($"An error occurred: {ex.Message}", "Error");
        }
    }


    // async void Save()
    // {
    //     if (string.IsNullOrEmpty(Coa.ReceivedBy))
    //     {
    //         await dialogService.AlertAsync("This field is required.", "Alert!");
    //         return;
    //     }

    //     if (string.IsNullOrEmpty(Coa.InspectionReceivedBy))
    //     {
    //         await dialogService.AlertAsync("This field is required.", "Alert!");
    //         return;
    //     }
    //     await HandleSaveOperationEvent.InvokeAsync(Coa); // Triggers the save and calls DisplayMessage
    // }

    public void ChangeTitle(string title)
    {
        Title = title;
    }
}
