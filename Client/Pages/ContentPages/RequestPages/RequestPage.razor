@implements IDisposable
@if (allState.ShowRequest)
{
    <div class="container mt-5">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="float-start">Requests</h4>
                        <button class="btn btn-outline-success float-end" @onclick="OpenDialog">
                            <i class="bi bi-plus-circle-dotted"></i> Add Request </button>
                    </div>
                    <div class="card-header">
                        <div class="card-body">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th scope="col">Record Number</th>
                                        <th scope="col">Division</th>
                                        <th scope="col">Project Code</th>
                                        <th scope="col">Fund Source</th>
                                        <th scope="col">Date Received</th>
                                        <th scope="col">Request Number</th>
                                        <th scope="col">Request Date</th>
                                        <th scope="col">Order Number</th>
                                        <th scope="col">Order Date</th>
                                        <th scope="col">Supplier</th>
                                        <th scope="col">Particulars</th>
                                        <th scope="col">Requestor</th>
                                        <th scope="col">Amount</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <th scope="row">1</th>
                                        <td>PPID</td>
                                        <td>PR01</td>
                                        <td>Sample</td>
                                        <td>10/09/2024</td>
                                        <td>1</td>
                                        <td>10/09/2024</td>
                                        <td>1</td>
                                        <td>10/09/2024</td>
                                        <td>Sample</td>
                                        <td>Keyboard</td>
                                        <td>Michael Yvan T. Singue</td>
                                        <td>2000PHP</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">2</th>
                                        <td>PPID</td>
                                        <td>PR02</td>
                                        <td>Sample</td>
                                        <td>10/09/2024</td>
                                        <td>2</td>
                                        <td>10/09/2024</td>
                                        <td>2</td>
                                        <td>10/09/2024</td>
                                        <td>Sample</td>
                                        <td>Monitor</td>
                                        <td>Catherine V. Desuyo</td>
                                        <td>3000PHP</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<RequestDialog @ref="requestDialog"
    HandleSaveOperationEvent="HandleSaveOperationEvent"
    Request="Request" />
@code {
    RequestDialog? requestDialog;
    Request Request = new Request
    {
        Division = string.Empty,
        ProjectCode = string.Empty,
        FundSource = string.Empty,
        Supplier = string.Empty,
        Particulars = string.Empty,
        Requestor = string.Empty
    };
    public string Title { get; set; } = "Add";
    public List<Request> Requests { get; set; } = new();

    protected async override Task OnInitializedAsync()
    {
        await GetRequests();
        allState.Action += StateHasChanged;
    }

    private async Task GetRequests()
    {
        Requests = await requestService.GetAll(Constants.RequestBaseUrl);
    }

    void OpenDialog()
    {
        requestDialog?.OpenDialog();
    }

    private async Task HandleSaveOperationEvent(Request request)
    {
        bool successCheck = false;
        if (Request.Id > 0)
        {
            var result = await requestService.Update(Request, Constants.RequestBaseUrl);
            successCheck = await DisplayMessage(result.Flag, result.Message);
        }
        else
        {
            var response = await requestService.Insert(Request, Constants.RequestBaseUrl);
            successCheck = await DisplayMessage(response.Flag, response.Message);
        }
        if (successCheck)
        {
            Request Request = new Request
                {
                    Division = string.Empty,
                    ProjectCode = string.Empty,
                    FundSource = string.Empty,
                    Supplier = string.Empty,
                    Particulars = string.Empty,
                    Requestor = string.Empty
                };
            await GetRequests();
            requestDialog?.ChangeTitle("Add");
        }
    }

    private void EditClicked(Request request)
    {
        requestDialog?.ChangeTitle("Update");
        Request = request;
        OpenDialog();
    }

    private async Task<bool> DisplayMessage(bool flag, string message)
    {
        if (flag)
        {
            await dialogService.AlertAsync(message, "Success!");
            return true;
        }
        else
        {
            await dialogService.AlertAsync(message, "Alert!");
            return false;
        }
    }

    public void Dispose()
    {
        allState.Action -= StateHasChanged;
    }
}
