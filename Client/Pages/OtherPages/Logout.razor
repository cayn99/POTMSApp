<div class="btn-group">
   @*  <img src="@(ProfileImage == "" ? "../images/profile/iconpfp.jpg" : ProfileImage)" width="60" height="60" 
    style="border-top-left-radius: 10%; border-bottom-left-radius: 10%" /> *@
    <a href="/identity/account/login" style="padding-bottom: 10px; color: red; text-decoration: underline" @onclick="LogoutClicked">
                        <i class="bi bi-box-arrow-left" style="padding-right: 10px"></i>
                        Logout
                    </a>
   @*  <button type="button" class="btn btn-none border-0 dropdown-toggle dropdown-toggle-split rounded-btn" 
    data-bs-toggle="dropdown" aria-expanded="false" style="background-color: black">
        <span class="visually-hidden">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu mt-2 border-0">
        <li>
            <div class="card">
                <div class="card=body">
                    <ul class="list-group">
                        <li class="list-group-item">
                            <a class="text-primary fw-bold float-start text-decoration-none" 
                            style="font-family:Tahoma; cursor:pointer;">
                                <i class="bi bi-person-gear"></i>
                                Profile
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="card-footer">
                    
                </div>
            </div>
        </li>
    </ul> *@
</div>

@code
{
    // public string ProfileImage { get; set; } = "";
    async Task LogoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/identity/account/login", replace: true, forceLoad: true);
    }
}