// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerLibrary.Data;

#nullable disable

namespace ServerLibrary.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241010055457_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaseLibrary.Entities.AccountingApproval", b =>
                {
                    b.Property<int>("AccountingApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountingApprovalId"));

                    b.Property<int>("AccountingCompleteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FirstPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FourthPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ReceivedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SecondPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("ThirdPayment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AccountingApprovalId");

                    b.HasIndex("AccountingCompleteId")
                        .IsUnique();

                    b.ToTable("AccountingApprovals");
                });

            modelBuilder.Entity("BaseLibrary.Entities.AccountingComplete", b =>
                {
                    b.Property<int>("AccountingCompleteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountingCompleteId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Penalty")
                        .HasColumnType("bit");

                    b.HasKey("AccountingCompleteId");

                    b.ToTable("AccountingComplete");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Coa", b =>
                {
                    b.Property<int>("CoaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoaId"));

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("InspectionReceivedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InspectionRequest")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderCopy")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceivedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoaId");

                    b.ToTable("Coa");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Inspection", b =>
                {
                    b.Property<int>("InspectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InspectionId"));

                    b.Property<string>("AcceptedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAccepted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInspected")
                        .HasColumnType("datetime2");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Inspector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("InspectionId");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("BaseLibrary.Entities.OrderDelivery", b =>
                {
                    b.Property<int>("OrderDeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDeliveryId"));

                    b.Property<DateTime>("Conforme")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("OrderReceivedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderDeliveryId");

                    b.HasIndex("OrderReceivedId")
                        .IsUnique();

                    b.ToTable("OrderDeliveries");
                });

            modelBuilder.Entity("BaseLibrary.Entities.OrderReceived", b =>
                {
                    b.Property<int>("OrderReceivedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderReceivedId"));

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryDays")
                        .HasColumnType("int");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExtensionLetter")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("OrderReceivedId");

                    b.ToTable("OrderReceived");
                });

            modelBuilder.Entity("BaseLibrary.Entities.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountingApprovalId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountingApprovalId1")
                        .HasColumnType("int");

                    b.Property<int?>("AccountingCompleteId")
                        .HasColumnType("int");

                    b.Property<int>("CoaId")
                        .HasColumnType("int");

                    b.Property<int?>("CoaId1")
                        .HasColumnType("int");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InspectionId")
                        .HasColumnType("int");

                    b.Property<int?>("InspectionId1")
                        .HasColumnType("int");

                    b.Property<int>("OrderDeliveryId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderDeliveryId1")
                        .HasColumnType("int");

                    b.Property<int?>("OrderReceivedId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestRecordNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountingApprovalId")
                        .IsUnique();

                    b.HasIndex("AccountingApprovalId1");

                    b.HasIndex("AccountingCompleteId");

                    b.HasIndex("CoaId")
                        .IsUnique();

                    b.HasIndex("CoaId1");

                    b.HasIndex("InspectionId")
                        .IsUnique();

                    b.HasIndex("InspectionId1");

                    b.HasIndex("OrderDeliveryId")
                        .IsUnique();

                    b.HasIndex("OrderDeliveryId1");

                    b.HasIndex("OrderReceivedId");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.HasIndex("RequestRecordNumber");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Request", b =>
                {
                    b.Property<int>("RecordNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordNumber"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FundSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("Particulars")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestNumber")
                        .HasColumnType("int");

                    b.Property<string>("Requestor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecordNumber");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("BaseLibrary.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BaseLibrary.Entities.AccountingApproval", b =>
                {
                    b.HasOne("BaseLibrary.Entities.AccountingComplete", "AccountingComplete")
                        .WithOne("AccountingApproval")
                        .HasForeignKey("BaseLibrary.Entities.AccountingApproval", "AccountingCompleteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountingComplete");
                });

            modelBuilder.Entity("BaseLibrary.Entities.OrderDelivery", b =>
                {
                    b.HasOne("BaseLibrary.Entities.OrderReceived", "OrderReceived")
                        .WithOne("OrderDelivery")
                        .HasForeignKey("BaseLibrary.Entities.OrderDelivery", "OrderReceivedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderReceived");
                });

            modelBuilder.Entity("BaseLibrary.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("BaseLibrary.Entities.AccountingApproval", "AccountingApproval")
                        .WithOne("PurchaseOrder")
                        .HasForeignKey("BaseLibrary.Entities.PurchaseOrder", "AccountingApprovalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.AccountingApproval", null)
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("AccountingApprovalId1");

                    b.HasOne("BaseLibrary.Entities.AccountingComplete", null)
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("AccountingCompleteId");

                    b.HasOne("BaseLibrary.Entities.Coa", "Coa")
                        .WithOne("PurchaseOrder")
                        .HasForeignKey("BaseLibrary.Entities.PurchaseOrder", "CoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.Coa", null)
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("CoaId1");

                    b.HasOne("BaseLibrary.Entities.Inspection", "Inspection")
                        .WithOne("PurchaseOrder")
                        .HasForeignKey("BaseLibrary.Entities.PurchaseOrder", "InspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.Inspection", null)
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("InspectionId1");

                    b.HasOne("BaseLibrary.Entities.OrderDelivery", "OrderDelivery")
                        .WithOne("PurchaseOrder")
                        .HasForeignKey("BaseLibrary.Entities.PurchaseOrder", "OrderDeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.OrderDelivery", null)
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("OrderDeliveryId1");

                    b.HasOne("BaseLibrary.Entities.OrderReceived", null)
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("OrderReceivedId");

                    b.HasOne("BaseLibrary.Entities.Request", "Request")
                        .WithOne("PurchaseOrder")
                        .HasForeignKey("BaseLibrary.Entities.PurchaseOrder", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.Request", null)
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("RequestRecordNumber");

                    b.Navigation("AccountingApproval");

                    b.Navigation("Coa");

                    b.Navigation("Inspection");

                    b.Navigation("OrderDelivery");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("BaseLibrary.Entities.AccountingApproval", b =>
                {
                    b.Navigation("PurchaseOrder");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("BaseLibrary.Entities.AccountingComplete", b =>
                {
                    b.Navigation("AccountingApproval");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Coa", b =>
                {
                    b.Navigation("PurchaseOrder");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Inspection", b =>
                {
                    b.Navigation("PurchaseOrder");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("BaseLibrary.Entities.OrderDelivery", b =>
                {
                    b.Navigation("PurchaseOrder");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("BaseLibrary.Entities.OrderReceived", b =>
                {
                    b.Navigation("OrderDelivery");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Request", b =>
                {
                    b.Navigation("PurchaseOrder");

                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
