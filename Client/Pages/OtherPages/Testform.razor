@attribute [Authorize]
@page "/dynamic-form"

@using System.Collections.Generic

<div class="modal-body">
    @foreach (var request in Requests)
    {
        <div class="form-container">
            <!-- Dynamic content -->
            <div class="input-group mb-3 mt-3">
                <div class="input-group-prepend">
                    <label class="input-group-text" for="inputGroupSelect01">Service Request</label>
                </div>
                <select class="custom-select" @bind="request.RequestTypeId">
                    <option selected disabled>Choose...</option>
                    @foreach (var requestType in RequestTypes)
                    {
                        <option value="@requestType.Id">@requestType.Name</option>
                    }
                </select>
            </div>
            <div class="input-group mb-3 mt-3">
                <div class="input-group-prepend">
                    <label class="input-group-text" for="inputGroupSelect01">Unit Type</label>
                </div>
                <select class="custom-select" @bind="request.UnitTypeId">
                    <option selected disabled>Choose...</option>
                    @foreach (var unit in Units)
                    {
                        <option value="@unit.Id">@unit.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="name">Request Service Description</label>
                <input type="text" class="form-control" @bind="request.Description" placeholder="Enter service request description" required>
            </div>
            <button type="button" class="btn btn-danger mt-3" @onclick="(() => RemoveRequest(request))">Remove</button>
        </div>
    }

    <button type="button" class="btn btn-primary mt-3" @onclick="AddRequest">Add</button>
</div>

@code {
    public class Request
    {
        public int? RequestTypeId { get; set; }
        public int? UnitTypeId { get; set; }
        public string Description { get; set; } = string.Empty;
    }

    public class RequestType
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
    }

    public class Unit
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
    }

    private List<Request> Requests { get; set; } = new();
    private List<RequestType> RequestTypes { get; set; } = new();
    private List<Unit> Units { get; set; } = new();

    protected override void OnInitialized()
    {
        // Simulated data
        RequestTypes = new List<RequestType>
        {
            new() { Id = 1, Name = "Type A" },
            new() { Id = 2, Name = "Type B" },
        };

        Units = new List<Unit>
        {
            new() { Id = 1, Name = "Unit X" },
            new() { Id = 2, Name = "Unit Y" },
        };

        // Add an initial request
        AddRequest();
    }

    private void AddRequest()
    {
        Requests.Add(new Request());
    }

    private void RemoveRequest(Request request)
    {
        Requests.Remove(request);
    }
}
