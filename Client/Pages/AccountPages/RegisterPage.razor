@page "/identity/account/register"
@using Client.Pages.OtherPages
@using Syncfusion.Blazor.Popups
@inject SfDialogService DialogService
@layout AuthenticationLayout

<div class="container">
    <div class="row">
        <EditForm Model="User" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <div class="card bg-light mx-auto" style="margin-top:7%; border-radius:10px; font-weight:bold; max-width:400px">
                <div class="card-header text-center">Fill this form to Register</div>
                <div class="card-body">
                    <div class="form-group">
                        <label class="form-label">Full Name</label>
                        <InputText @bind-Value="User.FullName" class="form-control" placeholder="Given name first (Ex. Juan Dela Cruz)" aria-label="FullName" />
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Email</label>
                        <InputText @bind-Value="User.Email" class="form-control" placeholder="Enter your email" aria-label="Email" />
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Division</label>
                        <InputText @bind-Value="User.Division" class="form-control" placeholder="Enter your division" aria-label="Division" />
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Position</label>
                        <InputText @bind-Value="User.Position" class="form-control" placeholder="Enter your position" aria-label="Position" />
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Id Code</label>
                        <InputText @bind-Value="User.IdCode" class="form-control" placeholder="Enter your employee ID" aria-label="IdCode" />
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Password</label>
                        <div class="input-group">
                            <input type="@passwordInputType" @bind="User.Password" class="form-control" placeholder="Enter your password" aria-label="Password" />
                            <span class="input-group-text" style="cursor: pointer;" @onclick="TogglePasswordVisibility">
                                <img src="images/icon/@(isPasswordVisible ? "hidden.png" : "view.png")" alt="Toggle Password Visibility" width="20" />
                            </span>
                        </div>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label">Confirm Password</label>
                        <div class="input-group">
                            <input type="@confirmPasswordInputType" @bind="User.ConfirmPassword" class="form-control" placeholder="Confirm your password" aria-label="ConfirmPassword" />
                            <span class="input-group-text" style="cursor: pointer;" @onclick="ToggleConfirmPasswordVisibility">
                                <img src="images/icon/@(isConfirmPasswordVisible ? "hidden.png" : "view.png")" alt="Toggle Confirm Password Visibility" width="20" />
                            </span>
                        </div>
                    </div>
                    <div class="form-group mt-3">
                        @if (ShowLoadingButton)
                        {
                            <ButtonLoadingSpinner></ButtonLoadingSpinner>
                        }
                        else
                        {
                            <button class="btn btn-outline-primary float-end" type="submit">Register</button>
                        }
                    </div>
                </div>
                <div class="card-footer">
                    <span class="text-center">
                        Have an account already? | 
                        <a class="btn-link" href="identity/account/login">Sign In</a>
                    </span>
                    <ValidationSummary/>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    public bool ShowLoadingButton { get; set; } = false;
    Register User = new();
    private bool isPasswordVisible = false;
    private bool isConfirmPasswordVisible = false;

    // Determine input type based on visibility
    private string passwordInputType => isPasswordVisible ? "text" : "password";
    private string confirmPasswordInputType => isConfirmPasswordVisible ? "text" : "password";

    // Toggle the password visibility
    private void TogglePasswordVisibility()
    {
        isPasswordVisible = !isPasswordVisible;
    }
    private void ToggleConfirmPasswordVisibility()
    {
        isConfirmPasswordVisible = !isConfirmPasswordVisible;
    }
    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    async Task HandleRegistration()
    {
        ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if (result.Flag)
        {
            await DisplayDialog(result.Message, "Success!");
            User = new();
        }
        else
        {
            await DisplayDialog(result.Message, "Alert!");
        }
        ShowLoadingButton = false;
    }
    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }
}


    

   

   
                        